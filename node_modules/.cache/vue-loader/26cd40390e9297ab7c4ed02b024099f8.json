{"remainingRequest":"/home/ubuntu/workspace/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/workspace/web/src/view/menu/menu.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"/home/ubuntu/workspace/web/src/view/menu/menu.vue","mtime":1650728386000},{"path":"/home/ubuntu/workspace/web/node_modules/css-loader/dist/cjs.js","mtime":1725533577518},{"path":"/home/ubuntu/workspace/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1725533578591},{"path":"/home/ubuntu/workspace/web/node_modules/postcss-loader/src/index.js","mtime":1725533578097},{"path":"/home/ubuntu/workspace/web/node_modules/cache-loader/dist/cjs.js","mtime":1725533577608},{"path":"/home/ubuntu/workspace/web/node_modules/vue-loader/lib/index.js","mtime":1725533578346}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5hbnQtdGFibGUtdGhlYWQgPiB0ciA+IHRoew0KICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0ICFpbXBvcnRhbnQ7DQp9DQouYW50LW1lbnV7DQogIGJhY2tncm91bmQ6aW5oZXJpdCAhaW1wb3J0YW50DQp9DQoNCi5hbnQtbWVudTpub3QoLmFudC1tZW51LWhvcml6b250YWwpIC5hbnQtbWVudS1pdGVtLXNlbGVjdGVkew0KICBiYWNrZ3JvdW5kOmluaGVyaXQgIWltcG9ydGFudA0KfQ0KLmFudC10YWJsZS1wbGFjZWhvbGRlcnsNCiAgYmFja2dyb3VuZDppbmhlcml0ICFpbXBvcnRhbnQNCg0KfQ0KLmFudC10YWJsZS10Ym9keSA+IHRyLmFudC10YWJsZS1yb3ctc2VsZWN0ZWQgdGR7DQogIGJhY2tncm91bmQ6aW5oZXJpdCAhaW1wb3J0YW50DQp9DQo="},{"version":3,"sources":["menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"menu.vue","sourceRoot":"src/view/menu","sourcesContent":["<template>\r\n  <a-layout style=\"width:100%;height:100%\" class=\"content\">\r\n    <a-layout-header v-if=\"this.$route.path != '/login'\">\r\n      <div class=\"top-title\">单词本</div>\r\n      <div class=\"log-out\" @click=\"logout\">退出登录</div>\r\n    </a-layout-header>\r\n    <a-layout :style='{backgroundColor:backgroundColor}'>\r\n      <a-layout-sider v-if=\"this.$route.path != '/login'\" style=\"background:inherit !important\">\r\n          <div>\r\n            <a-menu \r\n              style=\"width:100%\" \r\n              mode=\"inline\" \r\n              :open-keys=\"openKeys\"  \r\n              @openChange=\"onOpenChange\" \r\n              @select=\"select\">\r\n\r\n              <a-sub-menu key=\"sub4\">\r\n                <span slot=\"title\"><a-icon type=\"setting\" /><span>单词管理</span></span>\r\n                <a-menu-item key=\"keyword/keywordList\">\r\n                  单词管理\r\n                </a-menu-item>\r\n              </a-sub-menu>\r\n              <a-sub-menu key=\"sub5\">\r\n                <span slot=\"title\"><a-icon type=\"setting\" /><span>单词本管理</span></span>\r\n                <a-menu-item key=\"category/categoryList\">\r\n                  单词本\r\n                </a-menu-item>\r\n              </a-sub-menu>\r\n\r\n              <a-sub-menu key=\"sub6\">\r\n                <span slot=\"title\"><a-icon type=\"setting\" /><span>颜色管理</span></span>\r\n                <a-menu-item key=\"color/colorList\">\r\n                  颜色\r\n                </a-menu-item>\r\n              </a-sub-menu>\r\n              <!-- <a-sub-menu key=\"sub6\">\r\n                <span slot=\"title\"><a-icon type=\"setting\" /><span>用户管理</span></span>\r\n                <a-menu-item key=\"user/userList\">\r\n                  用户列表\r\n                </a-menu-item>\r\n              </a-sub-menu>\r\n              <a-sub-menu key=\"sub7\">\r\n                <span slot=\"title\"><a-icon type=\"setting\" /><span>冻结管理</span></span>\r\n                <a-menu-item key=\"freeze/freezeList\">\r\n                  冻结列表\r\n                </a-menu-item>\r\n              </a-sub-menu>\r\n              <a-sub-menu key=\"sub8\">\r\n                <span slot=\"title\"><a-icon type=\"setting\" /><span>轮播图</span></span>\r\n                <a-menu-item key=\"swiper/swiperList\">\r\n                  轮播图列表\r\n                </a-menu-item>\r\n              </a-sub-menu> -->\r\n            </a-menu>\r\n\r\n            <div style=\"margin-bottom:15px;text-align: center;margin-right: 20px;margin-top: 15px;\">\r\n              <span style=\"vertical-align: bottom;margin-right: 10px;\">释义:</span>\r\n              <a-switch @change=\"showDefinition\" />\r\n            </div>\r\n          </div>\r\n      </a-layout-sider>\r\n\r\n      <a-layout-content>\r\n        <slot></slot>\r\n      </a-layout-content>\r\n    </a-layout>\r\n  </a-layout>\r\n</template>\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport { getAction } from '../../request/http';\r\nexport default {\r\n  data() {\r\n    return {\r\n      rootSubmenuKeys: ['sub4','sub5','sub6','sub7','sub8'],\r\n      openKeys: ['sub4'],\r\n      permission:[\r\n        {\r\n          keys:'',\r\n          name:\"任务管理\",\r\n          children:[\r\n            {\r\n              path:'taskList',\r\n              name:'任务列表'\r\n            },\r\n            {\r\n              path:'taskVerify',\r\n              name:'审核任务'\r\n            }\r\n          ]\r\n        },\r\n      ],\r\n      backgroundColor:'',\r\n      definition:false\r\n    }\r\n  },\r\n  created(){\r\n    this.getBackground()\r\n    this.$bus.$on('changeBackground',this.getBackground)\r\n  },\r\n  methods:{\r\n\r\n    showDefinition(checked){\r\n      console.log('checked',checked)\r\n      this.definition = checked;\r\n      this.$bus.$emit('definition',checked)\r\n    },\r\n    handleClick(e){\r\n      this.$router.push('/'+ e.key)\r\n    },\r\n    logout(){\r\n      localStorage.removeItem('token');\r\n      this.$store.commit('removepermission')\r\n      window.location.reload()\r\n    },\r\n    onOpenChange(openKeys) {\r\n      const latestOpenKey = openKeys.find(key => this.openKeys.indexOf(key) === -1);\r\n      if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n        this.openKeys = openKeys;\r\n      } else {\r\n        this.openKeys = latestOpenKey ? [latestOpenKey] : [];\r\n      }\r\n    },\r\n    select(a,b,c){\r\n      this.$router.push('/'+ a.key)\r\n    },\r\n\r\n    getBackground(){\r\n      getAction('color/list',{page:1,size:100}).then(res=>{\r\n        let color = '';\r\n        res.result.forEach(ele=>{\r\n          if(ele.status == 1){\r\n            color = ele.color\r\n          }\r\n        })\r\n        this.backgroundColor=color || '#f9ebeb8f'\r\n      })\r\n    },\r\n    \r\n  },\r\n  computed:{\r\n    ...mapGetters([\r\n      'getpermission'\r\n    ])\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.top-title{\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  color:white\r\n}\r\n.content .ant-layout-sider{\r\n  background: white;\r\n  \r\n}\r\n.log-out{\r\n  position: absolute;\r\n  top: 0;\r\n  color: white;\r\n  right: 50px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n<style>\r\n.ant-table-thead > tr > th{\r\n  background-color: inherit !important;\r\n}\r\n.ant-menu{\r\n  background:inherit !important\r\n}\r\n\r\n.ant-menu:not(.ant-menu-horizontal) .ant-menu-item-selected{\r\n  background:inherit !important\r\n}\r\n.ant-table-placeholder{\r\n  background:inherit !important\r\n\r\n}\r\n.ant-table-tbody > tr.ant-table-row-selected td{\r\n  background:inherit !important\r\n}\r\n</style>"]}]}